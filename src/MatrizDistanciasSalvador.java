public class MatrizDistanciasSalvador {

    // 0: Depósito (Comércio/Centro)    15: Brotas
    // 1: Pelourinho                    16: Federação
    // 2: Barra (Farol da Barra)       17: Graça
    // 3: Rio Vermelho                  18: Vitória
    // 4: Pituba                        19: Corredor da Vitória
    // 5: Ondina                        20: Campo Grande
    // 6: Canela                        21: Nazaré
    // 7: Aeroporto (SSA)               22: Barris
    // 8: Rodoviária                    23: Tororó
    // 9: Itapuã                        24: Iguatemi
    // 10: Bonfim                       25: Paralela
    // 11: Stella Maris                 26: Cajazeiras
    // 12: Flamengo                     27: Cabula
    // 13: Piatã                        28: Liberdade
    // 14: Lauro de Freitas             29: Subúrbio Ferroviário
    public static final double[][] DISTANCIAS = {
            //   0     1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19    20    21    22    23    24    25    26    27    28    29
            { 0.0,  2.0,  8.0, 10.0, 12.0,  5.0,  3.0, 28.0,  8.0, 25.0,  7.0, 30.0, 28.0, 22.0, 35.0,  6.0,  9.0,  4.0,  5.0,  6.0,  3.5,  2.5,  4.0,  5.5, 15.0, 18.0, 25.0, 12.0,  9.0, 15.0 }, // 0: Comércio
            { 2.0,  0.0,  6.0,  8.0, 11.0,  4.0,  2.5, 27.0,  7.0, 24.0,  6.0, 29.0, 27.0, 21.0, 34.0,  5.5,  8.0,  3.5,  4.5,  5.5,  3.0,  2.0,  3.5,  5.0, 14.0, 17.0, 24.0, 11.0,  8.0, 14.0 }, // 1: Pelourinho
            { 8.0,  6.0,  0.0,  6.0,  8.0,  4.5,  7.0, 25.0, 10.0, 22.0, 11.0, 27.0, 25.0, 19.0, 32.0,  9.0,  3.0,  5.0,  2.0,  1.5,  6.0,  7.0,  8.0,  7.5, 12.0, 15.0, 22.0, 14.0, 12.0, 18.0 }, // 2: Barra
            { 10.0,  8.0,  6.0,  0.0,  4.0,  3.0,  8.5, 20.0,  6.0, 17.0, 14.0, 22.0, 20.0, 14.0, 27.0, 11.0,  7.0,  9.0,  5.0,  4.0,  9.0, 10.0, 11.0,  8.0, 10.0, 13.0, 20.0, 16.0, 14.0, 20.0 }, // 3: Rio Vermelho
            { 12.0, 11.0,  8.0,  4.0,  0.0,  6.0,  9.0, 18.0,  5.0, 15.0, 16.0, 20.0, 18.0, 12.0, 25.0, 13.0,  9.0, 11.0,  7.0,  6.0, 11.0, 12.0, 13.0, 10.0,  8.0, 11.0, 18.0, 14.0, 16.0, 22.0 }, // 4: Pituba
            { 5.0,  4.0,  4.5,  3.0,  6.0,  0.0,  4.0, 22.0,  8.0, 19.0, 10.0, 24.0, 22.0, 16.0, 29.0,  7.0,  5.0,  3.0,  1.5,  2.0,  4.5,  5.0,  6.0,  5.5, 11.0, 14.0, 21.0, 13.0, 11.0, 17.0 }, // 5: Ondina
            { 3.0,  2.5,  7.0,  8.5,  9.0,  4.0,  0.0, 26.0,  9.0, 23.0,  8.0, 28.0, 26.0, 20.0, 33.0,  4.0,  8.0,  2.0,  4.0,  5.0,  2.0,  1.5,  3.0,  4.0, 13.0, 16.0, 23.0, 10.0,  7.0, 13.0 }, // 6: Canela
            { 28.0, 27.0, 25.0, 20.0, 18.0, 22.0, 26.0,  0.0, 20.0,  8.0, 30.0, 10.0, 12.0, 15.0, 18.0, 30.0, 28.0, 29.0, 26.0, 25.0, 28.0, 29.0, 30.0, 27.0, 22.0, 25.0, 32.0, 35.0, 33.0, 40.0 }, // 7: Aeroporto
            { 8.0,  7.0, 10.0,  6.0,  5.0,  8.0,  9.0, 20.0,  0.0, 18.0, 12.0, 22.0, 20.0, 16.0, 23.0, 10.0, 12.0, 10.0, 11.0, 12.0,  9.0,  8.0,  9.0,  7.0, 12.0, 15.0, 22.0,  8.0,  6.0, 10.0 }, // 8: Rodoviária
            { 25.0, 24.0, 22.0, 17.0, 15.0, 19.0, 23.0,  8.0, 18.0,  0.0, 28.0,  5.0,  7.0, 10.0, 15.0, 27.0, 25.0, 26.0, 23.0, 22.0, 25.0, 26.0, 27.0, 24.0, 20.0, 23.0, 30.0, 32.0, 30.0, 35.0 }, // 9: Itapuã
            { 7.0,  6.0, 11.0, 14.0, 16.0, 10.0,  8.0, 30.0, 12.0, 28.0,  0.0, 32.0, 30.0, 26.0, 37.0,  9.0, 13.0,  9.0, 12.0, 13.0,  8.0,  7.0,  6.0,  9.0, 18.0, 21.0, 28.0, 15.0,  5.0, 12.0 }, // 10: Bonfim
            { 30.0, 29.0, 27.0, 22.0, 20.0, 24.0, 28.0, 10.0, 22.0,  5.0, 32.0,  0.0,  3.0,  8.0, 12.0, 32.0, 30.0, 31.0, 28.0, 27.0, 30.0, 31.0, 32.0, 29.0, 25.0, 28.0, 35.0, 37.0, 35.0, 42.0 }, // 11: Stella Maris
            { 28.0, 27.0, 25.0, 20.0, 18.0, 22.0, 26.0, 12.0, 20.0,  7.0, 30.0,  3.0,  0.0,  5.0, 10.0, 30.0, 28.0, 29.0, 26.0, 25.0, 28.0, 29.0, 30.0, 27.0, 23.0, 26.0, 33.0, 35.0, 33.0, 40.0 }, // 12: Flamengo
            { 22.0, 21.0, 19.0, 14.0, 12.0, 16.0, 20.0, 15.0, 16.0, 10.0, 26.0,  8.0,  5.0,  0.0,  8.0, 24.0, 22.0, 23.0, 20.0, 19.0, 22.0, 23.0, 24.0, 21.0, 17.0, 20.0, 27.0, 29.0, 27.0, 34.0 }, // 13: Piatã
            { 35.0, 34.0, 32.0, 27.0, 25.0, 29.0, 33.0, 18.0, 23.0, 15.0, 37.0, 12.0, 10.0,  8.0,  0.0, 37.0, 35.0, 36.0, 33.0, 32.0, 35.0, 36.0, 37.0, 34.0, 30.0, 33.0, 40.0, 42.0, 40.0, 47.0 }, // 14: Lauro de Freitas
            { 6.0,  5.5,  9.0, 11.0, 13.0,  7.0,  4.0, 30.0, 10.0, 27.0,  9.0, 32.0, 30.0, 24.0, 37.0,  0.0, 11.0,  5.0,  8.0,  9.0,  5.0,  4.0,  7.0,  3.0, 17.0, 20.0, 27.0,  8.0,  7.0, 14.0 }, // 15: Brotas
            { 9.0,  8.0,  3.0,  7.0,  9.0,  5.0,  8.0, 28.0, 12.0, 25.0, 13.0, 30.0, 28.0, 22.0, 35.0, 11.0,  0.0,  7.0,  4.0,  3.0,  8.0,  9.0, 10.0,  9.0, 14.0, 17.0, 24.0, 16.0, 14.0, 20.0 }, // 16: Federação
            { 4.0,  3.5,  5.0,  9.0, 11.0,  3.0,  2.0, 29.0, 10.0, 26.0,  9.0, 31.0, 29.0, 23.0, 36.0,  5.0,  7.0,  0.0,  3.0,  4.0,  2.5,  2.0,  4.0,  4.5, 15.0, 18.0, 25.0, 12.0,  9.0, 15.0 }, // 17: Graça
            { 5.0,  4.5,  2.0,  5.0,  7.0,  1.5,  4.0, 26.0, 11.0, 23.0, 12.0, 28.0, 26.0, 20.0, 33.0,  8.0,  4.0,  3.0,  0.0,  1.0,  4.0,  5.0,  6.0,  6.0, 13.0, 16.0, 23.0, 14.0, 12.0, 18.0 }, // 18: Vitória
            { 6.0,  5.5,  1.5,  4.0,  6.0,  2.0,  5.0, 25.0, 12.0, 22.0, 13.0, 27.0, 25.0, 19.0, 32.0,  9.0,  3.0,  4.0,  1.0,  0.0,  5.0,  6.0,  7.0,  7.0, 12.0, 15.0, 22.0, 15.0, 13.0, 19.0 }, // 19: Corredor da Vitória
            { 3.5,  3.0,  6.0,  9.0, 11.0,  4.5,  2.0, 28.0,  9.0, 25.0,  8.0, 30.0, 28.0, 22.0, 35.0,  5.0,  8.0,  2.5,  4.0,  5.0,  0.0,  1.0,  2.0,  3.0, 14.0, 17.0, 24.0, 11.0,  8.0, 14.0 }, // 20: Campo Grande
            { 2.5,  2.0,  7.0, 10.0, 12.0,  5.0,  1.5, 29.0,  8.0, 26.0,  7.0, 31.0, 29.0, 23.0, 36.0,  4.0,  9.0,  2.0,  5.0,  6.0,  1.0,  0.0,  3.0,  4.0, 15.0, 18.0, 25.0, 10.0,  7.0, 13.0 }, // 21: Nazaré
            { 4.0,  3.5,  8.0, 11.0, 13.0,  6.0,  3.0, 30.0,  9.0, 27.0,  6.0, 32.0, 30.0, 24.0, 37.0,  7.0, 10.0,  4.0,  6.0,  7.0,  2.0,  3.0,  0.0,  5.0, 16.0, 19.0, 26.0,  9.0,  6.0, 12.0 }, // 22: Barris
            { 5.5,  5.0,  7.5,  8.0, 10.0,  5.5,  4.0, 27.0,  7.0, 24.0,  9.0, 29.0, 27.0, 21.0, 34.0,  3.0,  9.0,  4.5,  6.0,  7.0,  3.0,  4.0,  5.0,  0.0, 13.0, 16.0, 23.0,  6.0,  8.0, 14.0 }, // 23: Tororó
            { 15.0, 14.0, 12.0, 10.0,  8.0, 11.0, 13.0, 22.0, 12.0, 20.0, 18.0, 25.0, 23.0, 17.0, 30.0, 17.0, 14.0, 15.0, 13.0, 12.0, 14.0, 15.0, 16.0, 13.0,  0.0,  8.0, 15.0, 20.0, 18.0, 25.0 }, // 24: Iguatemi
            { 18.0, 17.0, 15.0, 13.0, 11.0, 14.0, 16.0, 25.0, 15.0, 23.0, 21.0, 28.0, 26.0, 20.0, 33.0, 20.0, 17.0, 18.0, 16.0, 15.0, 17.0, 18.0, 19.0, 16.0,  8.0,  0.0, 12.0, 23.0, 21.0, 28.0 }, // 25: Paralela
            { 25.0, 24.0, 22.0, 20.0, 18.0, 21.0, 23.0, 32.0, 22.0, 30.0, 28.0, 35.0, 33.0, 27.0, 40.0, 27.0, 24.0, 25.0, 23.0, 22.0, 24.0, 25.0, 26.0, 23.0, 15.0, 12.0,  0.0, 30.0, 28.0, 35.0 }, // 26: Cajazeiras
            { 12.0, 11.0, 14.0, 16.0, 14.0, 13.0, 10.0, 35.0,  8.0, 32.0, 15.0, 37.0, 35.0, 29.0, 42.0,  8.0, 16.0, 12.0, 14.0, 15.0, 11.0, 10.0,  9.0,  6.0, 20.0, 23.0, 30.0,  0.0, 10.0,  8.0 }, // 27: Cabula
            { 9.0,  8.0, 12.0, 14.0, 16.0, 11.0,  7.0, 33.0,  6.0, 30.0,  5.0, 35.0, 33.0, 27.0, 40.0,  7.0, 14.0,  9.0, 12.0, 13.0,  8.0,  7.0,  6.0,  8.0, 18.0, 21.0, 28.0, 10.0,  0.0,  6.0 }, // 28: Liberdade
            { 15.0, 14.0, 18.0, 20.0, 22.0, 17.0, 13.0, 40.0, 10.0, 35.0, 12.0, 42.0, 40.0, 34.0, 47.0, 14.0, 20.0, 15.0, 18.0, 19.0, 14.0, 13.0, 12.0, 14.0, 25.0, 28.0, 35.0,  8.0,  6.0,  0.0 }  // 29: Subúrbio Ferroviário
    };

    public static final String[] NOMES_PONTOS = {
            "Depósito (Comércio)", "Pelourinho", "Barra", "Rio Vermelho", "Pituba",
            "Ondina", "Canela", "Aeroporto (SSA)", "Rodoviária", "Itapuã",
            "Bonfim", "Stella Maris", "Flamengo", "Piatã", "Lauro de Freitas",
            "Brotas", "Federação", "Graça", "Vitória", "Corredor da Vitória",
            "Campo Grande", "Nazaré", "Barris", "Tororó", "Iguatemi",
            "Paralela", "Cajazeiras", "Cabula", "Liberdade", "Subúrbio Ferroviário"
    };

    public static double calcularDistanciaRota(int[] rota, double[][] matrizDistancias, int depositoIdx) {
        if (rota == null || rota.length == 0) {
            return 0.0;
        }

        double distanciaTotal = 0.0;

        // Distância do depósito para o primeiro cliente
        distanciaTotal += matrizDistancias[depositoIdx][rota[0]];

        // Distâncias entre clientes consecutivos na rota
        for (int i = 0; i < rota.length - 1; i++) {
            distanciaTotal += matrizDistancias[rota[i]][rota[i + 1]];
        }

        // Distância do último cliente de volta ao depósito
        distanciaTotal += matrizDistancias[rota[rota.length - 1]][depositoIdx];

        return distanciaTotal;
    }


}
